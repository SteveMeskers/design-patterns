# DESCRIPTION
A class that functions as an interface to a particular resource. That resource may be remote, expensive to construct, or may require logging or some other additional functionality.

# USE CASE
Example you are calling foo.Bar() and assume that foo is in the same process as Bar(). If you want to later pull all foo related
options into another process you can use a proxy. The proxy will have the same interface but different behavior.

## EXERCISE
You are given the Person  class and asked to write a ResponsiblePerson  proxy that does the following:

Allows person to drink unless they are younger than 18 (in that case, return "too young")

Allows person to drive unless they are younger than 16 (otherwise, "too young")

In case of driving while drink, returns "dead", regardless of age
